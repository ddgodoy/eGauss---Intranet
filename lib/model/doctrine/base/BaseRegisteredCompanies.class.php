<?php

/**
 * BaseRegisteredCompanies
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property datetime $date
 * @property string $name
 * @property text $description
 * @property string $website
 * @property string $email
 * @property string $address
 * @property string $phone
 * @property string $skype
 * @property string $logo
 * @property string $code
 * @property string $contact_first_name
 * @property string $contact_last_name
 * @property string $contact_phone
 * @property string $contact_email
 * @property integer $type_companies_id
 * @property text $comments
 * @property string $basecamp_id
 * @property TypeCompanies $TypeCompanies
 * @property Doctrine_Collection $RegisteredCompanies
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method datetime            getDate()                Returns the current record's "date" value
 * @method string              getName()                Returns the current record's "name" value
 * @method text                getDescription()         Returns the current record's "description" value
 * @method string              getWebsite()             Returns the current record's "website" value
 * @method string              getEmail()               Returns the current record's "email" value
 * @method string              getAddress()             Returns the current record's "address" value
 * @method string              getPhone()               Returns the current record's "phone" value
 * @method string              getSkype()               Returns the current record's "skype" value
 * @method string              getLogo()                Returns the current record's "logo" value
 * @method string              getCode()                Returns the current record's "code" value
 * @method string              getContactFirstName()    Returns the current record's "contact_first_name" value
 * @method string              getContactLastName()     Returns the current record's "contact_last_name" value
 * @method string              getContactPhone()        Returns the current record's "contact_phone" value
 * @method string              getContactEmail()        Returns the current record's "contact_email" value
 * @method integer             getTypeCompaniesId()     Returns the current record's "type_companies_id" value
 * @method text                getComments()            Returns the current record's "comments" value
 * @method string              getBasecampId()          Returns the current record's "basecamp_id" value
 * @method TypeCompanies       getTypeCompanies()       Returns the current record's "TypeCompanies" value
 * @method Doctrine_Collection getRegisteredCompanies() Returns the current record's "RegisteredCompanies" collection
 * @method RegisteredCompanies setId()                  Sets the current record's "id" value
 * @method RegisteredCompanies setDate()                Sets the current record's "date" value
 * @method RegisteredCompanies setName()                Sets the current record's "name" value
 * @method RegisteredCompanies setDescription()         Sets the current record's "description" value
 * @method RegisteredCompanies setWebsite()             Sets the current record's "website" value
 * @method RegisteredCompanies setEmail()               Sets the current record's "email" value
 * @method RegisteredCompanies setAddress()             Sets the current record's "address" value
 * @method RegisteredCompanies setPhone()               Sets the current record's "phone" value
 * @method RegisteredCompanies setSkype()               Sets the current record's "skype" value
 * @method RegisteredCompanies setLogo()                Sets the current record's "logo" value
 * @method RegisteredCompanies setCode()                Sets the current record's "code" value
 * @method RegisteredCompanies setContactFirstName()    Sets the current record's "contact_first_name" value
 * @method RegisteredCompanies setContactLastName()     Sets the current record's "contact_last_name" value
 * @method RegisteredCompanies setContactPhone()        Sets the current record's "contact_phone" value
 * @method RegisteredCompanies setContactEmail()        Sets the current record's "contact_email" value
 * @method RegisteredCompanies setTypeCompaniesId()     Sets the current record's "type_companies_id" value
 * @method RegisteredCompanies setComments()            Sets the current record's "comments" value
 * @method RegisteredCompanies setBasecampId()          Sets the current record's "basecamp_id" value
 * @method RegisteredCompanies setTypeCompanies()       Sets the current record's "TypeCompanies" value
 * @method RegisteredCompanies setRegisteredCompanies() Sets the current record's "RegisteredCompanies" collection
 * 
 * @package    egauss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRegisteredCompanies extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('registered_companies');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('website', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('email', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('address', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('skype', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('logo', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('code', 'string', 150, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 150,
             ));
        $this->hasColumn('contact_first_name', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('contact_last_name', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('contact_phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('contact_email', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('type_companies_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('comments', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('basecamp_id', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TypeCompanies', array(
             'local' => 'type_companies_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('AppUser as RegisteredCompanies', array(
             'local' => 'id',
             'foreign' => 'registered_companies_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}