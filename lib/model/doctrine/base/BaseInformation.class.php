<?php

/**
 * BaseInformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property datetime $date
 * @property string $name
 * @property text $description
 * @property integer $registered_companies_id
 * @property integer $type_information_id
 * @property boolean $important
 * @property RegisteredCompanies $RegisteredCompanies
 * @property TypeInformation $TypeInformation
 * @property Doctrine_Collection $Information
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method datetime            getDate()                    Returns the current record's "date" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method text                getDescription()             Returns the current record's "description" value
 * @method integer             getRegisteredCompaniesId()   Returns the current record's "registered_companies_id" value
 * @method integer             getTypeInformationId()       Returns the current record's "type_information_id" value
 * @method boolean             getImportant()               Returns the current record's "important" value
 * @method RegisteredCompanies getRegisteredCompanies()     Returns the current record's "RegisteredCompanies" value
 * @method TypeInformation     getTypeInformation()         Returns the current record's "TypeInformation" value
 * @method Doctrine_Collection getInformation()             Returns the current record's "Information" collection
 * @method Information         setId()                      Sets the current record's "id" value
 * @method Information         setDate()                    Sets the current record's "date" value
 * @method Information         setName()                    Sets the current record's "name" value
 * @method Information         setDescription()             Sets the current record's "description" value
 * @method Information         setRegisteredCompaniesId()   Sets the current record's "registered_companies_id" value
 * @method Information         setTypeInformationId()       Sets the current record's "type_information_id" value
 * @method Information         setImportant()               Sets the current record's "important" value
 * @method Information         setRegisteredCompanies()     Sets the current record's "RegisteredCompanies" value
 * @method Information         setTypeInformation()         Sets the current record's "TypeInformation" value
 * @method Information         setInformation()             Sets the current record's "Information" collection
 * 
 * @package    egauss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInformation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('information');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('date', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('registered_companies_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('type_information_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('important', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RegisteredCompanies', array(
             'local' => 'registered_companies_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TypeInformation', array(
             'local' => 'type_information_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('VideosRegisteredCompanies as Information', array(
             'local' => 'id',
             'foreign' => 'information_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}