<?php

/**
 * BaseInvestor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property datetime $date
 * @property string $name
 * @property string $last_name
 * @property string $phone
 * @property string $email
 * @property string $web_personal
 * @property string $company
 * @property string $web_company
 * @property string $city
 * @property string $country
 * @property text $project
 * @property integer $tic_id
 * @property integer $general_theme_id
 * @property integer $theme_id
 * @property text $sub_theme
 * @property boolean $accredited_enisa
 * @property integer $type_of_investor_id
 * @property decimal $investor_from
 * @property decimal $investor_to
 * @property text $comment
 * @property integer $app_user_id
 * @property Tic $Tic
 * @property GeneralTheme $GeneralTheme
 * @property Theme $Theme
 * @property TypeOfInvestor $TypeOfInvestor
 * @property AppUser $AppUser
 * 
 * @method integer        getId()                  Returns the current record's "id" value
 * @method datetime       getDate()                Returns the current record's "date" value
 * @method string         getName()                Returns the current record's "name" value
 * @method string         getLastName()            Returns the current record's "last_name" value
 * @method string         getPhone()               Returns the current record's "phone" value
 * @method string         getEmail()               Returns the current record's "email" value
 * @method string         getWebPersonal()         Returns the current record's "web_personal" value
 * @method string         getCompany()             Returns the current record's "company" value
 * @method string         getWebCompany()          Returns the current record's "web_company" value
 * @method string         getCity()                Returns the current record's "city" value
 * @method string         getCountry()             Returns the current record's "country" value
 * @method text           getProject()             Returns the current record's "project" value
 * @method integer        getTicId()               Returns the current record's "tic_id" value
 * @method integer        getGeneralThemeId()      Returns the current record's "general_theme_id" value
 * @method integer        getThemeId()             Returns the current record's "theme_id" value
 * @method text           getSubTheme()            Returns the current record's "sub_theme" value
 * @method boolean        getAccreditedEnisa()     Returns the current record's "accredited_enisa" value
 * @method integer        getTypeOfInvestorId()    Returns the current record's "type_of_investor_id" value
 * @method decimal        getInvestorFrom()        Returns the current record's "investor_from" value
 * @method decimal        getInvestorTo()          Returns the current record's "investor_to" value
 * @method text           getComment()             Returns the current record's "comment" value
 * @method integer        getAppUserId()           Returns the current record's "app_user_id" value
 * @method Tic            getTic()                 Returns the current record's "Tic" value
 * @method GeneralTheme   getGeneralTheme()        Returns the current record's "GeneralTheme" value
 * @method Theme          getTheme()               Returns the current record's "Theme" value
 * @method TypeOfInvestor getTypeOfInvestor()      Returns the current record's "TypeOfInvestor" value
 * @method AppUser        getAppUser()             Returns the current record's "AppUser" value
 * @method Investor       setId()                  Sets the current record's "id" value
 * @method Investor       setDate()                Sets the current record's "date" value
 * @method Investor       setName()                Sets the current record's "name" value
 * @method Investor       setLastName()            Sets the current record's "last_name" value
 * @method Investor       setPhone()               Sets the current record's "phone" value
 * @method Investor       setEmail()               Sets the current record's "email" value
 * @method Investor       setWebPersonal()         Sets the current record's "web_personal" value
 * @method Investor       setCompany()             Sets the current record's "company" value
 * @method Investor       setWebCompany()          Sets the current record's "web_company" value
 * @method Investor       setCity()                Sets the current record's "city" value
 * @method Investor       setCountry()             Sets the current record's "country" value
 * @method Investor       setProject()             Sets the current record's "project" value
 * @method Investor       setTicId()               Sets the current record's "tic_id" value
 * @method Investor       setGeneralThemeId()      Sets the current record's "general_theme_id" value
 * @method Investor       setThemeId()             Sets the current record's "theme_id" value
 * @method Investor       setSubTheme()            Sets the current record's "sub_theme" value
 * @method Investor       setAccreditedEnisa()     Sets the current record's "accredited_enisa" value
 * @method Investor       setTypeOfInvestorId()    Sets the current record's "type_of_investor_id" value
 * @method Investor       setInvestorFrom()        Sets the current record's "investor_from" value
 * @method Investor       setInvestorTo()          Sets the current record's "investor_to" value
 * @method Investor       setComment()             Sets the current record's "comment" value
 * @method Investor       setAppUserId()           Sets the current record's "app_user_id" value
 * @method Investor       setTic()                 Sets the current record's "Tic" value
 * @method Investor       setGeneralTheme()        Sets the current record's "GeneralTheme" value
 * @method Investor       setTheme()               Sets the current record's "Theme" value
 * @method Investor       setTypeOfInvestor()      Sets the current record's "TypeOfInvestor" value
 * @method Investor       setAppUser()             Sets the current record's "AppUser" value
 * 
 * @package    egauss
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvestor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('investor');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('name', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('last_name', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('email', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('web_personal', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('company', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('web_company', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('city', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('country', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('project', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('tic_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('general_theme_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('theme_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('sub_theme', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('accredited_enisa', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('type_of_investor_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('investor_from', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('investor_to', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('comment', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('app_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tic', array(
             'local' => 'tic_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('GeneralTheme', array(
             'local' => 'general_theme_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Theme', array(
             'local' => 'theme_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('TypeOfInvestor', array(
             'local' => 'type_of_investor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AppUser', array(
             'local' => 'app_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}