detect_relations: true
actAs: [Timestampable]
options:
  collate: utf8_general_ci
  charset: utf8
  
#
# COMPANY
#
Company:
  tableName: company
  columns:
    id:       { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:     { type: string(50), notnull: true }
    email:    { type: string(200) }
    address:  { type: string(100) }
    phone:    { type: string(50) }
    logo:     { type: string(50) }
    
#
# APP_USER
#
AppUser:
  tableName: app_user
  columns:
    id:                { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:              { type: string(100) }
    last_name:         { type: string(100) }
    email:             { type: string(200), notnull: true }
    phone:             { type: string(50), notnull: true }
    skype:             { type: string(50) }
    contact_time_from: { type: string(50), notnull: true }
    contact_time_to:   { type: string(50), notnull: true }
    photo:             { type: string(50) }
    salt:              { type: string(100) }
    password:          { type: string(100) }
    recover_token:     { type: string(100) }
    enabled:           { type: boolean, default: true }
    last_access:       { type: datetime }
    company_id:        { type: integer(4), notnull: true }
    user_role_id:      { type: integer(4), notnull: true }

  relations:
    Company:       { class: Company, local: company_id, foreign: id, foreignAlias: Company, onDelete: CASCADE }
    UserRole:      { class: UserRole, local: user_role_id, foreign: id, foreignAlias: UserRole, onDelete: CASCADE }
    
#
# USER_ROLE
#
UserRole:
  tableName: user_role
  columns:
    id:          { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:        { type: string(50), notnull: true }
    credentials: { type: string(250) }
    code:        { type: string(50) }    

#
#USERPROJECTS
#
Userprojects:
  tableName: userprojects
  columns:
    id:           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    app_user_id:  { type: integer(4) }
    project_id:   { type: string(50) }
    project_name: { type: string(200) }
  relations:
    AppUser:      { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: CASCADE }

#
#INVESTOR
#
Investor:
  tableName: investor
  columns:
    id:                  { type: integer(4), primary: true, notnull: true, autoincrement: true }
    date:                { type: datetime }
    name:                { type: string(200), notnull: true }
    last_name:           { type: string(200)}
    phone:               { type: string(50) }
    email:               { type: string(200)}
    web_personal:        { type: string(200)}
    company:             { type: string(200)}
    web_company:         { type: string(200)}
    city:                { type: string(200)}
    country:             { type: string(200)}
    project:             { type: text }
    tic_id:              { type: integer(4), notnull: true}
    general_theme_id:    { type: integer(4), notnull: true}
    theme_id:            { type: integer(4), notnull: true}
    sub_theme:           { type: text }
    accredited_enisa:    { type: boolean, default: false }
    type_of_investor_id: { type: integer(4), notnull: true}
    investor_from:       { type: decimal(10), scale: 2, default: 0 }
    investor_to:         { type: decimal(10), scale: 2, default: 0 } 
    comment:             { type: text }
    app_user_id:         { type: integer(4)}
  relations:
    Tic:                 { class: Tic, local: tic_id, foreign: id, foreignAlias: Tic, onDelete: CASCADE } 
    GeneralTheme:        { class: GeneralTheme, local: general_theme_id, foreign: id, foreignAlias: GeneralTheme, onDelete: CASCADE } 
    Theme:               { class: Theme, local: theme_id, foreign: id, foreignAlias: Theme, onDelete: CASCADE } 
    TypeOfInvestor:      { class: TypeOfInvestor, local: type_of_investor_id, foreign: id, foreignAlias: TypeOfInvestor, onDelete: CASCADE } 
    AppUser:             { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: CASCADE }

#
#tic
#
Tic:
  tableName: tic
  columns:
    id:           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:         { type: string(200), notnull: true }
    code:         { type: string(200), notnull: true }

#
#general_theme
#
GeneralTheme:
  tableName: general_theme
  columns:
    id:           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:         { type: string(200), notnull: true }
    code:         { type: string(200), notnull: true }
    
#
#theme
#
Theme:
  tableName: theme
  columns:
    id:           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:         { type: string(200), notnull: true }
    code:         { type: string(200), notnull: true }    

#
#type_of_investor
#
TypeOfInvestor:
  tableName: type_of_investor
  columns:
    id:           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:         { type: string(200), notnull: true }
    code:         { type: string(200), notnull: true }  
    
#
#RegisteredCompanies
#
RegisteredCompanies:
  tableName: registered_companies
  columns:
    id:                 { type: integer(4), primary: true, notnull: true, autoincrement: true }
    date:               { type: datetime }
    name:               { type: string(50), notnull: true }
    description:        { type: text }
    website:            { type: string(250) }
    email:              { type: string(200) }
    address:            { type: string(100) }
    phone:              { type: string(50) }
    skype:              { type: string(50) }
    logo:               { type: string(50) }
    code:               { type: string(150), notnull: true}
    contact_first_name: { type: string(30)}
    contact_last_name:  { type: string(30)}
    contact_phone:      { type: string(50)}
    contact_email:      { type: string(200)}
    type_companies_id:  { type: integer(4), notnull: true }
    comments:           { type: text }
    basecamp_id:        { type: string(50) }
  relations:
    TypeCompanies:      { class: TypeCompanies, local: type_companies_id, foreign: id, foreignAlias: TypeCompanies, onDelete: CASCADE } 
    
#
#type_companies
#
TypeCompanies:
  tableName: type_companies
  columns:
    id:                 { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:               { type: string(50), notnull: true }

#
#AppUserRegisteredCompanies
#
AppUserRegisteredCompanies:
  tableName: app_user_registered_companies
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    app_user_id:             { type: integer(4)}
    registered_companies_id: { type: integer(4)}
    notified:                { type: boolean, default: false }
    
  relations:
    AppUser:             { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: SET NULL }
    RegisteredCompanies: { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: SET NULL }

#
#VideosRegisteredCompanies
#
VideosRegisteredCompanies:
  tableName: videos_registered_companies
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:                    { type: string(50), notnull: true }
    url:                     { type: string(200), notnull: true } 
    registered_companies_id: { type: integer(4), notnull: true  }
    information_id:          { type: integer(4) }
    entrepreneur_id:         { type: integer(4) }
    
  relations:
    RegisteredCompanies: { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: CASCADE }
    Information:         { class: Information, local: information_id, foreign: id, foreignAlias: Information, onDelete: SET NULL }
    Entrepreneur:        { class: Entrepreneur, local: entrepreneur_id, foreign: id, foreignAlias: Entrepreneur, onDelete: SET NULL }

#
#DocumentsRegisteredCompanies
#
DocumentsRegisteredCompanies:
  tableName: documents_registered_companies
  columns:
    id:                          { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:                        { type: string(50), notnull: true }
    icon:                        { type: string(200), notnull: true }
    url:                         { type: string(200), notnull: true } 
    registered_companies_id:     { type: integer(4) }
    information_id:              { type: integer(4) }
    type_information_id:         { type: integer(4) }
    calendar_id:                 { type: integer(4) } 
    contracts_intermediation_id: { type: integer(4) } 
    ci_comments_id:              { type: integer(4) } 
    description:                 { type: text }
    download:                    { type: string(200), notnull: true }
    entrepreneur_id:             { type: integer(4) }
    
  relations:
    RegisteredCompanies:             { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: SET NULL }
    Information:                     { class: Information, local: information_id, foreign: id, foreignAlias: Information, onDelete: SET NULL }
    TypeInformation:                 { class: TypeInformation, local: type_information_id, foreign: id, foreignAlias: TypeInformation, onDelete: CASCADE }  
    Calendar:                        { class: Calendar, local: calendar_id, foreign: id, foreignAlias: Calendar, onDelete: CASCADE }  
    ContractsIntermediation:         { class: ContractsIntermediation, local: contracts_intermediation_id, foreign: id, foreignAlias: ContractsIntermediation, onDelete: CASCADE }  
    ContractsIntermediationComments: { class: ContractsIntermediationComments, local: ci_comments_id, foreign: id, foreignAlias: ContractsIntermediationComments, onDelete: CASCADE }  
    Entrepreneur:                    { class: Entrepreneur, local: entrepreneur_id, foreign: id, foreignAlias: Entrepreneur, onDelete: SET NULL }
 
#
#information
#
Information:
  tableName: information
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    date:                    { type: datetime , notnull: true}
    name:                    { type: string(50), notnull: true }
    description:             { type: text }
    registered_companies_id: { type: integer(4) }
    type_information_id:     { type: integer(4) }
    important:               { type: boolean, default: false }
    
  relations:
    RegisteredCompanies: { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: CASCADE }  
    TypeInformation:     { class: TypeInformation, local: type_information_id, foreign: id, foreignAlias: TypeInformation, onDelete: CASCADE }  
    
#
#type_information
#
TypeInformation:
  tableName: type_information
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:                    { type: string(50), notnull: true }
    
#
#notifications
#
Notifications:
  tableName: notifications 
  columns:
    id:                           { type: integer(4), primary: true, notnull: true, autoincrement: true }
    registered_companies_id:      { type: integer(4) }
    information_id:               { type: integer(4) }
    contracts_intermediation_id:  { type: integer(4) }
    app_user_id:                  { type: integer(4)}
    type:                         { type: string(50), notnull: true }
    subject:                      { type: text }
    important:                    { type: boolean, default: false }
    
  relations:
    RegisteredCompanies:      { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: CASCADE }
    Information:              { class: Information, local: information_id, foreign: id, foreignAlias: Information, onDelete: SET NULL }
    ContractsIntermediation:  { class: ContractsIntermediation, local: contracts_intermediation_id, foreign: id, foreignAlias: ContractsIntermediation, onDelete: SET NULL }
    AppUser:                  { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: SET NULL }
    
    
#
#calendar
#
Calendar:
  tableName: calendar
  columns:
    id:                        { type: integer(4), primary: true, notnull: true, autoincrement: true }
    app_user_id:               { type: integer(4), notnull: true }
    year:                      { type: integer(8), notnull: true }
    month:                     { type: integer(8), notnull: true }
    day:                       { type: integer(8), notnull: true }
    hour_from:                 { type: string(50), notnull: true }
    hour_to:                   { type: string(50), notnull: true }
    subject:                   { type: text }
    body:                      { type: text }
    type_calendar_id:          { type: integer(4), notnull: true }
    registered_companies_id:   { type: integer(4) }
    next:                      { type: boolean, default: false }
    
    
  relations:
    AppUser:                   { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: CASCADE }      
    RegisteredCompanies:       { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: CASCADE }  
    TypeCalendar:              { class: TypeCalendar, local: type_calendar_id, foreign: id, foreignAlias: TypeCalendar, onDelete: CASCADE }  

#
#TypeCalendar
#
TypeCalendar:
  tableName: type_calendar
  columns:
    id:                 { type: integer(4), primary: true, notnull: true, autoincrement: true }  
    name:               { type: string(50), notnull: true }
    
    
#
#TempsDocuments
#
TempsDocuments:
  tableName: temps_documents
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    name:                    { type: string(50), notnull: true }
    description:             { type: text }
    icon:                    { type: string(200), notnull: true }
    url:                     { type: string(200), notnull: true }
    download:                { type: string(200), notnull: true }
    type_information_id:     { type: integer(4) }
    
    
#
#billing
#
Billing:
  tableName: billing
  columns:
    id:                      { type: integer(4), primary: true, notnull: true, autoincrement: true }
    year:                    { type: integer(8), notnull: true }
    month:                   { type: integer(8), notnull: true }
    total_affiliated:        { type: 'decimal(9, 2)'} 
    sale_of_affiliated:      { type: 'decimal(9, 2)'}
    total_consultancy:       { type: 'decimal(9, 2)'}
    consultancy:             { type: 'decimal(9, 2)'}
    total_intermediation:    { type: 'decimal(9, 2)'}
    intermediation:          { type: 'decimal(9, 2)'}
    total_formation:         { type: 'decimal(9, 2)'}
    formation:               { type: 'decimal(9, 2)'}
    total_patents:           { type: 'decimal(9, 2)'}
    patents:                 { type: 'decimal(9, 2)'}   
    
    
#
#contracts_intermediation
#
ContractsIntermediation:
  tableName: contracts_intermediation
  columns:
    id:                        { type: integer(4), primary: true, notnull: true, autoincrement: true }
    year:                      { type: integer(8), notnull: true }
    month:                     { type: integer(8), notnull: true }
    day:                       { type: integer(8), notnull: true }
    customer_name:             { type: string(50), notnull: true }
    customer_company:          { type: string(150)}
    customer_workstation:      { type: string(200)}
    customer_email:            { type: string(200)}
    customer_phone:            { type: string(200)}
    company_name:              { type: string(50), notnull: true }
    company_contact:           { type: string(150)}
    company_email:             { type: string(250)}
    company_phone:             { type: string(250)}
    app_user_id:               { type: integer(4), notnull: true }
    observations:              { type: text }
    business_amount:           { type: 'decimal(9, 2)'}
    intermediation:            { type: 'decimal(9, 2)'}
    final_commission:          { type: 'decimal(9, 2)'}
    comments:                  { type: text }
    registered_companies_id:   { type: integer(4)}
    cashed:                    { type: boolean, default: false }
    
  relations:
    RegisteredCompanies: { class: RegisteredCompanies, local: registered_companies_id, foreign: id, foreignAlias: RegisteredCompanies, onDelete: SET NULL } 

ContractsIntermediationComments:
    tableName: contracts_intermediation_comments
    columns:
      id:                            { type: integer(4), primary: true, notnull: true, autoincrement: true }
      comments:                      { type: text }
      contracts_intermediation_id:   { type: integer(4), notnull: true}
      app_user_id:                   { type: integer(4), notnull: true }
        
    relations:
      ContractsIntermediation:       { class: ContractsIntermediation, local: contracts_intermediation_id, foreign: id, foreignAlias: ContractsIntermediation, onDelete: CASCADE }    
      AppUser:                       { class: AppUser, local: app_user_id, foreign: id, foreignAlias: AppUser, onDelete: CASCADE }
        
#
#Reunion Contracts Intermediation
#
ReunionContractsIntermediation:
  tableName: reunion_contracts_intermediation
  columns:
    id:                            { type: integer(4), primary: true, notnull: true, autoincrement: true }
    date:                          { type: datetime , notnull: true}
    comments:                      { type: text }
    contracts_intermediation_id:   { type: integer(4), notnull: true}
   
  relations:
    ContractsIntermediation:       { class: ContractsIntermediation, local: contracts_intermediation_id, foreign: id, foreignAlias: ContractsIntermediation, onDelete: CASCADE }   
    
#
#Entrepreneur
#
Entrepreneur:
  tableName: entrepreneur
  columns:
    id:                   { type: integer(4), primary: true, notnull: true, autoincrement: true }
    date:                 { type: datetime , notnull: true}  
    year_one:             { type: string(200), notnull: true }
    year_two:             { type: string(200), notnull: true }   
    name:                 { type: string(200), notnull: true }
    last_name:            { type: string(200)}
    phone:                { type: string(50) }
    email:                { type: string(200)}
    linkedin:             { type: string(200)}
    web_personal:         { type: string(200)}
    sex:                  { type: string(200)}
    country:              { type: string(200)}
    workstation:          { type: string(200)}
    sector:               { type: string(255)}
    twitter:              { type: text }
    facebook:             { type: text }
    source:               { type: text }
    other_sites_interest: { type: text }
    project_name:         { type: string(255) }
    project:              { type: text }
    capital:              { type: boolean, default: false }
    comments_capital:     { type: text }
    courses:              { type: boolean, default: false }
    comments_courses:     { type: text }  
    comments:             { type: text }
